import "../../BasicDataImQuad.m": n,d,steinitz;
import "../../InitializeImQuad.m": K,w,tau,p1,p2,ZB,B,BasHermNorm,mmax,F,sqrtd,Injec;
import "../../QHullDirectory.m": qhulldirectory;
import "../Functions/Groups.m": matbas,matbas2,matbas3;

intrinsic ComputeRelations(V::VData)
 {Compute the relations w.r.t. V.}
 if not assigned V`Stabilizers then ComputeStabilizersImQuad(V); end if;
 if not assigned V`Barycenters then ComputeBarycentersImQuad(V); end if;
 if not assigned V`Edges then ComputeEdgesImQuad(V); end if;
 Barycenters:=V`Barycenters;
 Edges:=V`Edges;
 Stabs:=&cat[  [g : g in G] : G in V`Stabilizers];
 PL:=V`PerfectList;
 FL:=V`FacesList;
 FTL:=V`FaceTrafoList;
 NL:=V`NeighbourList;
 OKGens:=V`OKGens;
 Words:=[];
 Relations:=[];
 for a in [1..#PL] do
  for E in Edges[a] do
   for f in [1..#FL[a]] do
    if E subset FL[a][f] then
     cur:=a;
     S:=MinimalVectors(PL[cur]);
     face:=f;
     groupelt:=FTL[cur][face];
     groupeltprevious:=Parent(groupelt)!1;
     if groupelt ne groupeltprevious then
      word:=[[cur,face]];
      p:=0; e:=0;
      if groupelt in OKGens then p:=Position(OKGens,groupelt); e:=1; end if;
      if -groupelt in OKGens then p:=Position(OKGens,groupelt); e:=1; end if;
      if groupelt^-1 in OKGens then p:=Position(OKGens,groupelt); e:=-1; end if;
      if -groupelt^-1 in OKGens then p:=Position(OKGens,groupelt); e:=-1; end if;
      relation:=[[p,e]];
      Nb:=NL[cur][face];
      finished:=false;
      k:=1;
      count:=1;
      while not finished do
       count +:= 1; print count;
       h1:=groupeltprevious^-1;
       F:={HermitianTranspose(h1^-1)*HermitianTranspose(S[x])*S[x]*h1^-1 : x in FL[cur][face]};  //!!!
       h:=groupelt^-1;
       X:=[{HermitianTranspose(h^-1)*HermitianTranspose(S[x])*S[x]*h^-1 : x in f} : f in FL[Nb]];
       //return X;
       for i in [1..#X] do
        if {HermitianTranspose(S[i])*S[i] : i in E} subset X[i] and X[i] ne F then
         cur:=Nb;
         face:=i;
         g:=FTL[cur][face];
         if g ne MatrixRing(K,n)!1 then
          Append(~word,[Nb,i]);
          p:=0; e:=0;
          if g in OKGens then p:=Position(OKGens,g); e:=1; end if;
          if -g in OKGens then p:=Position(OKGens,g); e:=1; end if;
          if g^-1 in OKGens then p:=Position(OKGens,g); e:=-1; end if;
          if -g^-1 in OKGens then p:=Position(OKGens,g); e:=-1; end if;
          Append(~relation,[p,e]);
         end if;
         Nb:=NL[cur][face];
         groupeltprevious:=groupelt;
         groupelt:=g*groupelt;
         break;
        end if;
       end for;
       k+:=1;
       if groupelt in Stabs then
        p:=Position(Stabs,groupelt);
        Append(~word,[0,p]);
        Append(~relation,[p,0]);
        finished:=true;
       end if;
      end while;
      Append(~Words,word);
      Append(~Relations,relation);
     end if;
    end if;
   end for;
  end for;
 end for;
 V`Words:=Words;
 V`Relations:=Relations;
end intrinsic;
